#include <iostream>
#include <string>

using namespace std;

struct Musica {
    string nome;
    string artista;
    Musica* prox;
    Musica* ant;

    Musica(const string& n, const string& a) : nome(n), artista(a), prox(nullptr), ant(nullptr) {}
};

class Playlist {
private:
    Musica* inicio;
    Musica* fim;
    Musica* tocando;

public:
    Playlist() : inicio(nullptr), fim(nullptr), tocando(nullptr) {}

    ~Playlist() {
        Musica* atual = inicio;
        while (atual) {
            Musica* prox = atual->prox;
            delete atual;
            atual = prox;
        }
    }

    void adicionarNoInicio(const string& nome, const string& artista) {
        Musica* nova = new Musica(nome, artista);
        if (!inicio) {
            inicio = fim = tocando = nova;
        } else {
            nova->prox = inicio;
            inicio->ant = nova;
            inicio = nova;
        }
    }

    void adicionarNoFim(const string& nome, const string& artista) {
        Musica* nova = new Musica(nome, artista);
        if (!fim) {
            inicio = fim = tocando = nova;
        } else {
            fim->prox = nova;
            nova->ant = fim;
            fim = nova;
        }
    }

    void avancar() {
        if (tocando && tocando->prox) {
            tocando = tocando->prox;
            cout << "Tocando agora: " << tocando->nome << " - " << tocando->artista << endl;
        } else {
            cout << "Fim da playlist!" << endl;
        }
    }

    void voltar() {
        if (tocando && tocando->ant) {
            tocando = tocando->ant;
            cout << "Tocando agora: " << tocando->nome << " - " << tocando->artista << endl;
        } else {
            cout << "Início da playlist!" << endl;
        }
    }

    void mostrarPlaylist() {
        Musica* atual = inicio;
        while (atual) {
            cout << atual->nome << " - " << atual->artista;
            if (atual == tocando) cout << " [Tocando]";
            cout << endl;
            atual = atual->prox;
        }
    }

    void inserirMusica() {
        string nome, artista, posicao;
        cout << "Digite o nome da música: ";
        getline(cin, nome);
        cout << "Digite o nome do artista: ";
        getline(cin, artista);
        cout << "Deseja adicionar no início ou no fim? (inicio/fim): ";
        getline(cin, posicao);

        if (posicao == "inicio") {
            adicionarNoInicio(nome, artista);
        } else {
            adicionarNoFim(nome, artista);
        }
    }
};

int main() {
    Playlist minhaPlaylist;
  printf("--------------------------------------------------------\n");

    minhaPlaylist.adicionarNoFim("vida chique", "veigh");
    minhaPlaylist.adicionarNoFim("Imagine", "teto");
    minhaPlaylist.adicionarNoInicio("Hotel California", "Eagles");
    minhaPlaylist.adicionarNoFim("i know", "travis scott");


    minhaPlaylist.mostrarPlaylist();

    cout << "\nInserindo nova música..." << endl;
    minhaPlaylist.inserirMusica();


    cout << "\nPlaylist atualizada:" << endl;
    minhaPlaylist.mostrarPlaylist();

    cout << "\nAvançando...\n";
    minhaPlaylist.avancar();
    minhaPlaylist.avancar();

    cout << "\nVoltando...\n";
    minhaPlaylist.voltar();
 
    return 0;
}
