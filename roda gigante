#include <iostream>
#include <string>
#include <vector>

using namespace std;

struct Carrinho {
    int pessoas;
    string cor;
    Carrinho* prox;
    Carrinho* ant;

    Carrinho(const string& c) : pessoas(0), cor(c), prox(nullptr), ant(nullptr) {}
};

class RodaGigante {
private:
    Carrinho* atual;

public:
    RodaGigante(const vector<string>& cores) {
        Carrinho* primeiro = nullptr;
        Carrinho* anterior = nullptr;

        for (const string& cor : cores) {
            Carrinho* novo = new Carrinho(cor);
            if (!primeiro) {
                primeiro = novo;
            } else {
                anterior->prox = novo;
                novo->ant = anterior;
            }
            anterior = novo;
        }

        // Tornar a lista circular
        primeiro->ant = anterior;
        anterior->prox = primeiro;

        atual = primeiro;
    }

    ~RodaGigante() {
        Carrinho* inicio = atual;
        Carrinho* temp = atual->prox;
        while (temp != inicio) {
            Carrinho* prox = temp->prox;
            delete temp;
            temp = prox;
        }
        delete inicio;
    }

    void girarHorario() {
        atual = atual->prox;
        cout << "Girando para o próximo carrinho (sentido horário)...\n";
        mostrarAtual();
    }

    void girarAntiHorario() {
        atual = atual->ant;
        cout << "Girando para o carrinho anterior (sentido anti-horário)...\n";
        mostrarAtual();
    }

    void embarcar() {
        if (atual->pessoas < 4) {
            atual->pessoas++;
            cout << "Uma pessoa embarcou no carrinho " << atual->cor << ".\n";
        } else {
            cout << "Carrinho " << atual->cor << " está cheio!\n";
        }
    }

    void desembarcar() {
        if (atual->pessoas > 0) {
            atual->pessoas--;
            cout << "Uma pessoa desembarcou do carrinho " << atual->cor << ".\n";
        } else {
            cout << "Carrinho " << atual->cor << " está vazio!\n";
        }
    }

    void mostrarAtual() {
        cout << "Carrinho atual: " << atual->cor << " | Pessoas: " << atual->pessoas << "\n";
    }

    void mostrarTodos() {
        Carrinho* temp = atual;
        cout << "\nEstado atual da roda-gigante:\n";
        do {
            cout << "- Cor: " << temp->cor << " | Pessoas: " << temp->pessoas;
            if (temp == atual) cout << " [Atual]";
            cout << "\n";
            temp = temp->prox;
        } while (temp != atual);
    }
};

int main() {
    vector<string> cores = {
        "Vermelho", "Azul", "Verde", "Amarelo", "Roxo",
        "Laranja", "Branco", "Preto", "Rosa", "Cinza"
    };

    RodaGigante roda(cores);

    int opcao;
    do {
        cout << "\n--- Menu Roda-Gigante ---\n";
        cout << "1. Girar sentido horário\n";
        cout << "2. Girar sentido anti-horário\n";
        cout << "3. Embarcar pessoa\n";
        cout << "4. Desembarcar pessoa\n";
        cout << "5. Mostrar carrinho atual\n";
        cout << "6. Mostrar todos os carrinhos\n";
        cout << "0. Sair\n";
        cout << "Escolha: ";
        cin >> opcao;

        switch (opcao) {
            case 1: roda.girarHorario(); break;
            case 2: roda.girarAntiHorario(); break;
            case 3: roda.embarcar(); break;
            case 4: roda.desembarcar(); break;
            case 5: roda.mostrarAtual(); break;
            case 6: roda.mostrarTodos(); break;
            case 0: cout << "Encerrando...\n"; break;
            default: cout << "Opção inválida.\n"; break;
        }

    } while (opcao != 0);

    return 0;
}
